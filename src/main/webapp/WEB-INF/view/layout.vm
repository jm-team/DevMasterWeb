<!DOCTYPE html>
<html>
<head>
	<title>Basic Tabs Sample</title>

	<link rel="stylesheet" type="text/css" href="${ServiceName}/assets/layout/css/jquery-ui.css">
	<link rel="stylesheet" type="text/css" href="${ServiceName}/assets/layout/css/layout-default.css">
		<link rel="stylesheet" href="http://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
	<link rel="stylesheet" href="http://jqueryui.com/resources/demos/style.css">
	<style type="text/css">

	.ui-layout-north,
	.ui-layout-center {
		/* remove default pane scrolling in north & center panes */
		overflow:	hidden;
	}

	.ui-layout-north {
		/* center themeswitcher buttons in north-pane */
		text-align:	center;
	}

	.ui-layout-center {
		/* remove default padding on center-pane so tabs widget fills it */
		padding:	0;
	}

	.column{
		vertical-align: top;
		border: 1px solid #aaa;
	}
	.draggable{
		cursor:move;
	}
	.comp{
		margin-top:5px;
	}
	.dragOver{
		background:#eee;
	}
	</style>

	<!--<script src="js/jquery-2.js"></script>-->
	<script src="${ServiceName}/assets/layout/js/jquery.js"></script>
	<script src="${ServiceName}/assets/layout/js/jquery-ui.js"></script>
	<script src="${ServiceName}/assets/layout/js/jquery.layout.js"></script>
	<script src="/page/js/widget/widgetutil.js"></script>
	<script src="/page/js/widget/input.js"></script>
	
    <script>
		var jmWidgets = {};
		jmWidgets['jmInput'] = jmInput;
	</script>


	<script type="text/javascript">
	// create global var for layout so we can call myLayout.resize() after changing a theme
	var myLayout;
	var dropContainer;
	var topOffset,leftOffet;
	$(document).ready(function(){
		topOffset = $('#top').height();
		leftOffset = $('#west').width();
		// create tabs FIRST so elems are correct size BEFORE Layout measures them
		$(".ui-layout-east").tabs();

		// create a layout with default settings
		//myLayout = $('body').layout();

		$( function() {
            $( ".draggable" ).draggable({
				connectToSortable: "#root",
				helper:"clone"
			});
            $( "#root" ).droppable({
			  accept: ".draggable",
              drop: onElementDrop,
			  out : onDragOut
            });
			$( "#root").css('top',topOffset);
			$( "#root").css('left',leftOffset);
			$( "#root" ).sortable({
            });
        });
  
	});
	
	function onElementDrop(event , ui){
		var type = ui.draggable.attr('type');
		if(!type){
			$('.droppable').removeClass('dragOver');
			$(this).droppable( "enable" );
			return;
		}
		
		var clone;
		if(type=='input'){
			clone = $('<span>&nbsp;<span>' + jmInput.initHtml());	
		}else if(type=='textarea'){
			clone = $('<span>&nbsp;<span><textarea class="target">input something here</textarea>');	
		}else if(type=='checkbox'){
			clone = $('<span><span><input  class="target" type="checkbox"/>');
		}else if(type=='radio'){
			clone = $('<span><span><input  class="target" type="radio" />');
		}else if(type=='text'){
			clone = $('<label  class="target">输入内容</label>');
		}else if(type=='link'){
			clone = $('<a href="#"  class="target">链接标题</a>');
		}else if(type=='container'){
			clone = $('<div  class="target" type="container" style="height:100px;width:100%;border:1px dashed #aaa;display:inline-block" class="droppable"></div>');
			clone.resizable();
			clone.droppable({
			  accept: ".draggable",
              drop: onElementDrop,
			  over: onDragOver,
			  out : onDragOut
            });
		}
		
		clone.bind('click',function(){
			onfocus(clone.find('.target'));
		});
		
		var top = $(this).css('top').replace('px','');
		var left = $(this).css('left').replace('px','');
        clone.css("position", "relative");
		if($(this).attr('id')=='root'){
    		clone.css("top", ui.position.top-top);
            clone.css("left", ui.position.left-left);
		}else{
			clone.css("top", ui.position.top-top-topOffset);
        	clone.css("left", ui.position.left-left-leftOffset);
		}
  		
		clone.addClass('draggable');
        $(this).append(clone);
		clone.draggable({ cursor: 'move'});
		$('.droppable').removeClass('dragOver');
		$(this).droppable( "enable" );
	}
	
	function onDragOver(event, ui){
		$('.droppable').removeClass('dragOver');
		$(this).addClass('dragOver');
		
		$('.droppable').droppable( "disable" );
		$(this).droppable( "enable" );
	}
	
	function onDragOut(event, ui){
		$(this).removeClass('dragOver');
		console.log("leave "+ui);
	}
	
	/**
	 * 当组元素中时处理代码
	 */
	function onfocus(ele){
		// 如果是同一个元素，不做任何操作
		/*if(selectedElement == ele){
			return;
		}
		
		selectedElement = ele;
		clearAttrs();
		clearEvents();
		listAttrs();
		listEvents();*/
		
		var widgetId = ele.attr('data-widget-id');
		var widgetType = ele.attr('data-widget-type');
		
		var widget = jmWidgets[widgetType];
		var attr = widget.getAttr(widgetId);
		
		console.log(attr);
		
		$('#tabs-1').html('');
		$.each(widget.attributes, function(index, value){
			$('#tabs-1').append(value.name + ' : <input type="text" name="'+value.value+'" value="'+attr[value.value]+'" />');
		});
		
		$('#tabs-1 input').bind('keyup', function(){
			bindAttrs(this, widgetId, widgetType);
		});
	}
	
	/**
	 * 清除元素的属性
	 */
	function clearAttrs(){
		$('.attr-editor').val('');
	}
	
	/**
	 * 列出元素的属性
	 */
	function listAttrs(){
		
	}
	
	/**
	 * 清除元素的事件
	 */
	function clearEvents(){
		
	}
	
	/**
	 * 列出元素的事件
	 */
	function listEvents(){
		
	}
	
	/**
	 * 将属性值绑定到元素上
	 */
	function bindAttrs(ele, widgetId, widgetType){
		var widget = jmWidgets[widgetType];
		
		var attrEle = $(ele);
		var attrValue = attrEle.val();
		var attrName = attrEle.attr('name');
		
		var attr = {widgetId : widgetId};
		attr[attrName] = attrValue;
		
		widget.setAttr(attr);
	}
	
	/**
	 * 将事件绑定到元素上
	 */
	function bindEvents(){
	}
	</script>

</head>
<body>

<div class="ui-layout-north" id="top">
	<!-- add extra utility buttons for the Themeswitcher tool -->
	<button onClick="removeUITheme()">编辑</button> &nbsp; &nbsp;
	<button onClick="myLayout.resizeAll(); myLayout.sizeContent('west');">预览</button>
</div>

<table style="height:800px;width:100%;" cellpadding="0px;" cellspacing="0px" border-spacing="2px">
<tr>
    <td id="west" class="column" style="width:10%">
		<div class="" >
        	<!--基础组件列表-->
                <div class="draggable comp" type="input">输入框</div>
        		<div class="draggable comp" type="textarea">多行文本框</div>
        		<div class="draggable comp" type="checkbox">checkbox</div>
        		<div class="draggable comp" type="radio">radio</div>
        		<div class="draggable comp" type="text">text</div>
        		<div class="draggable comp" type="link">link</div>
				<div class="draggable comp" type="container">容器</div>
				<div>===========================================</div>
        </div>
	</td>
	<td class="column" style="width:80%">
		<div id="root" class="droppable" style="height:800px;">
    	</div>
	</td>
	<td style="width:10%;" class="column">
		<div class="ui-layout-center" style="height:100%;">
        	<div class="ui-layout-east" style="height:100%">
        	  <ul>
                <li><a href="#tabs-1">属性</a></li>
                <li><a href="#tabs-2">事件</a></li>
              </ul>
              <div id="tabs-1">
				sfd
              </div>
              <div id="tabs-2">
                fe
              </div>
			</div>
        </div>
	</td>
</tr>
</table>

<script>
	$(function(){
		for(var key in jmWidgets){
			$('#west>div').append('<div class="draggable comp" type="'+jmWidgets[key].type+'">'+jmWidgets[key].name+'</div>');
		}
	});
</script>

</body>
</html>